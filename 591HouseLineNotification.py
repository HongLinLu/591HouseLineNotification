# -*- coding: utf-8 -*-
"""591HourseLineNotification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mAJHahnD3FlylP9nMeGNgV1E5fA_O_x5
"""

import emoji
import requests
from bs4 import BeautifulSoup
import re

#lineNotify設定
def lineNotifyMessage(msg, imgUrl):
    token = "g9e2OwWQtzrfzrdf9Af0vTAQ5JvfUtiiyBinnj3Wj9Z"
    # hearders 這兩項必帶
    # token 為 LINE Notinfy 申請的權杖
    headers = {
        "Authorization": "Bearer " + token,
        "Content-Type":  "application/x-www-form-urlencoded"
    }

    # message : 要顯示的文字
    # imageThumbnail、imageFullsize : 要顯示的圖片
    # stickerPackageId、stickerId : 貼圖
    message = {'message': msg, 'imageThumbnail':imgUrl,'imageFullsize':imgUrl}

    #透過 POST 傳送
    req = requests.post("https://notify-api.line.me/api/notify", headers = headers, data = message)

    return req.status_code

# 取得591租屋資訊
#要抓取頁面的Url
url = "https://rent.591.com.tw/list?kind=1&region=1&price=10000$_30000$&layout=1&other=pet,cook&sort=posttime_desc&option=cold,washer,icebox,bed&notice=not_cover"
#自訂 Request Headers
headers = {
    "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
    "Accept-Encoding" : "gzip, deflate, br",
    "Accept-Language" : "zh-TW,zh;q=0.9,en-US;q=0.8,en;q=0.7",
    "Connection" : "keep-alive",
    "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36",
    "Upgrade-Insecure-Requests" : "1",
    "Cache-Control" : "max-age=0",
    "Host" : "rent.591.com.tw",
    "Cookie" : "urlJumpIp=8; urlJumpIpByTxt=%E5%8F%B0%E4%B8%AD%E5%B8%82; is_new_index=1; is_new_index_redirect=1; T591_TOKEN=0mgp6gnmca0m1aes0a653qpk76; _ga=GA1.3.1853129893.1614755590; tw591__privacy_agree=0; _ga=GA1.4.1853129893.1614755590; _fbp=fb.2.1614755592267.503379817; new_rent_list_kind_test=0; _gid=GA1.3.990458239.1615170698; _gid=GA1.4.990458239.1615170698; webp=1; PHPSESSID=ugspv0rqvnetihun53ane0jlc4; XSRF-TOKEN=eyJpdiI6ImloZzR5Qm9SRk1XNVd4bmJ2VG8zNUE9PSIsInZhbHVlIjoiSExCSnRITEZjSE8rWktjVEptSnlEd1AxNEs1cHRcL1dEYktOR0dvUUNwdU9vNVVPUHlaK3UyXC9pOWpCVElxV0JJdzZGWFF0bytcL3MrSGNGSlpyQk96OGc9PSIsIm1hYyI6IjQ5NDgzZjc1YWExYTkyZDQ2YWRjZWQwZDI5YTIwODZhMTJkYzNlMmZiYzUwNmZmMzY2YjNhZjQ4NGI4OGY2NjMifQ%3D%3D; 591_new_session=eyJpdiI6ImpYUE9QWDJWYVwvaVlJc3dUK0ZiY3h3PT0iLCJ2YWx1ZSI6ImVMYnpSQ2ZhNG9VZHNSdWZNMjZTSG5nUTZOaWZlZ05kQkRXVkNLZDAxQlBqWWJneXVZbXZEWmd6SVRrMU5ZbGtrOU9tVG9RZm1CM2ZKUnNYQVlJaTNRPT0iLCJtYWMiOiIwN2UzODgzYWE0OGM2YTlkMDI1YTVjYjkzNmUyYWJiMzA5M2JmN2M0M2Q4NDQ1ODhlYTZkM2E3NzFkMjVjMWZlIn0%3D"
}

response = requests.get(url=url, headers=headers)

# print(response)
#### 產生結果
#### <Response [200]>
#### Response Status Code 200，代表成功

soup = BeautifulSoup(response.text, "html.parser")

# 輸出排版後的HTML
# print(soup.prettify())

# 取得所有租屋訊息
pageInfo = soup.find("ul", class_="paging").find_all("li")
# print("pageInfo", pageInfo)
for pn, page in enumerate(pageInfo):
  if(pn > 0):
    new_url = f"{url}&page={pn+1}"  # 修正：pn+1 確保頁碼從1開始，並使用f-string進行字符串格式化
    response = requests.get(url=new_url, headers=headers)
    soup = BeautifulSoup(response.text, "html.parser")

# 取得所有租屋訊息
  listInfoDiv = soup.find_all("div", class_="item")
  #print("listInfoDiv", listInfoDiv)
  num = 0
  for div in listInfoDiv:
      # 照片
      img_list = []
      listImgs = div.find_all("img")
      for img in listImgs:
        img_src = img.get("data-src")
        if img_src:  # 確保 data-src 屬性存在
          img_list.append(img_src)
      # print("img_list", img_list)

      # 標題
      title = div.find("a").getText()
      # print("title:", title)

      # 詳細資訊的 URL
      detailUrl = div.find("a").get("href")

      # 價格
      price = div.find('strong', class_="text-26px font-arial").getText() + " 元/月"
      # print("price:", price)

      # 標籤
      tag_list = []
      listTags = div.find_all("span", class_= "tag")
      for tag in listTags:
        tag_title = tag.getText()
        if tag_title:  # 確保 tag 文字存在
          tag_list.append(tag_title)
      # print("tag_list:", tag_list)

      # 住家資訊
      houseDetail = ""
      details = div.find_all("div", class_="item-info-txt")
      details_len = len(details)
      for j, detail in enumerate(details):
        de = detail.find_all("span") + detail.find_all("strong")
        # 取得長度
        de_len = len(de)
        for i, d in enumerate(de):
            if i == de_len - 1:
              houseDetail += d.getText().replace(" ", "").replace("\n", "")
            else:
              houseDetail += d.getText().replace(" ", "").replace("\n", "") + " | "
        # 資訊換行
        if j != details_len - 1:
          houseDetail += "\n      "
      # print("houseDetail", houseDetail)

      # 更新時間點
      # 初始化 uptime 變數
      uptime = None

      # 尋找包含「更新」字樣的 <span> 元素
      for up in div.find_all("span"):
          pattern = re.compile('更新')
          if len(pattern.findall(up.getText())) > 0:
              uptime = up.getText()

      # 如果找到更新時間
      if uptime:
          # 檢查「小時內更新」或「分鐘內更新」
          hour_pattern = re.compile('小時內更新')
          minute_pattern = re.compile('分鐘內更新')

          if len(hour_pattern.findall(uptime)) > 0:
              # 處理「小時內更新」
              hour_pattern = re.compile('(.*)(?=小時)')
              hours = re.search(hour_pattern, uptime).group(1)

              if int(hours) <= 3:
                  # 生成 LINE 訊息
                  msg = emoji.emojize(
                      '\n小幫手來啦~ :smiling_face: \n租屋網更新資訊啦! :collision: \n :megaphone:  ') + title + \
                      emoji.emojize('\n :dollar_banknote:  ') + price + \
                      emoji.emojize('\n :memo:  ') + houseDetail + \
                      emoji.emojize('\n :alarm_clock:  ') + uptime + \
                      emoji.emojize('\n\n :party_popper:  看更詳細點↓網址 \n ') + detailUrl
                  # 呼叫LINE通知
                  lineNotifyMessage(msg, img_list[0] if img_list else "")
                  # 印出要傳送的 LINE 訊息
                  # print(msg)
                  # print('-------------')

          elif len(minute_pattern.findall(uptime)) > 0:
              # 處理「分鐘內更新」
              minute_pattern = re.compile('(.*)(?=分鐘)')
              minutes = re.search(minute_pattern, uptime).group(1)

              if int(minutes) <= 180:  # 3小時 = 180分鐘
                  # 生成 LINE 訊息
                  msg = emoji.emojize(
                      '\n小幫手來啦~ :smiling_face: \n租屋網更新資訊啦! :collision: \n :megaphone:  ') + title + \
                      emoji.emojize('\n :dollar_banknote:  ') + price + \
                      emoji.emojize('\n :memo:  ') + houseDetail + \
                      emoji.emojize('\n :alarm_clock:  ') + uptime + \
                      emoji.emojize('\n\n :party_popper:  看更詳細點↓網址 \n ') + detailUrl
                  # 呼叫LINE通知
                  lineNotifyMessage(msg, img_list[0] if img_list else "")
                  # 印出要傳送的 LINE 訊息
                  # print(msg)
                  # print('-------------')